---
import YouTube from "../YouTube/YouTube.tsx";

export type GameMeta = {
  title: string;
  publisher?: string;
  developer?: string;
  year?: number;
  tags?: string[];
  trailer?: string;
  franchise?: string;
};
const { game } = Astro.props;
function getYouTubeVideoId(url?: string) {
  if (!url) return undefined;
  const match = url.split('v=')[1]?.match(/([a-zA-Z0-9_-]{11})/);
  return match ? match[1] : undefined;
}
const video_id = getYouTubeVideoId(game.trailer);
---
<div class="flex items-stretch mb-0 shadow-none m-0 p-0 bg-inherit">
  <div class="flex flex-row w-full m-0 p-0">
    <div class="flex-1 m-0 p-0 flex flex-col justify-between">
      <div>
        <div class="text-gray-100 text-xs">{game.publisher}</div>
        <div class="text-gray-100 text-base font-bold">{game.developer}</div>
        <div class="text-gray-100 text-sm">{game.year}</div>
      </div>
      <div class="flex flex-wrap gap-2 mt-2">
        {game.tags && game.tags.map((tag: string) => (
          <span class="border border-blue-300 text-blue-300 rounded-full px-3 py-0.5 text-sm">{tag}</span>
        ))}
      </div>
    </div>
    <div class="flex items-center m-0 p-0">
      {video_id ? (
       <YouTube client:visible videoId={video_id} width="320" height="180" imgSize="mqdefault" class="w-[320px] h-[180px] rounded-lg" />
      ) : (
        <div class="w-[320px] h-[180px] bg-gray-700 flex items-center justify-center p-0 rounded-lg">
          <span class="text-gray-400 text-base">Missing trailer</span>
        </div>
      )}
    </div>
  </div>
</div>
